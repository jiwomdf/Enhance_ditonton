// Mocks generated by Mockito 5.4.4 from annotations
// in tvs/test/helpers/test_helper_tv.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:core/domain/entities/tv.dart' as _i11;
import 'package:core/domain/entities/tv_detail.dart' as _i7;
import 'package:core/domain/entities/tv_recommendation.dart' as _i14;
import 'package:core/domain/repositories/tv_repository.dart' as _i3;
import 'package:core/domain/usecases/tv/get_tv_airing_today.dart' as _i17;
import 'package:core/domain/usecases/tv/get_tv_popular.dart' as _i16;
import 'package:core/domain/usecases/tv/get_tv_toprated.dart' as _i15;
import 'package:core/utils/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tvs/domain/usecase/tv/get_tv_detail.dart' as _i4;
import 'package:tvs/domain/usecase/tv/get_tv_recommendation.dart' as _i13;
import 'package:tvs/domain/usecase/tv/get_tv_watchlist.dart' as _i10;
import 'package:tvs/domain/usecase/tv/is_tv_in_watchlist.dart' as _i12;
import 'package:tvs/domain/usecase/tv/remove_tv_watchlist.dart' as _i9;
import 'package:tvs/domain/usecase/tv/save_tv_watchlist.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvRepository_1 extends _i1.SmartFake implements _i3.TvRepository {
  _FakeTvRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetTvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetail extends _i1.Mock implements _i4.GetTvDetail {
  MockGetTvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.TvDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.TvDetail>>.value(
            _FakeEither_0<_i6.Failure, _i7.TvDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i7.TvDetail>>);
}

/// A class which mocks [SaveTvWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTvWatchlist extends _i1.Mock implements _i8.SaveTvWatchlist {
  MockSaveTvWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_1(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.TvRepository);

  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> execute(_i7.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tv],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, String>>.value(
            _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tv],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, String>>);
}

/// A class which mocks [RemoveTvWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveTvWatchlist extends _i1.Mock implements _i9.RemoveTvWatchlist {
  MockRemoveTvWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, String>>.value(
            _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, String>>);
}

/// A class which mocks [GetTvWatchList].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvWatchList extends _i1.Mock implements _i10.GetTvWatchList {
  MockGetTvWatchList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>.value(
            _FakeEither_0<_i6.Failure, List<_i11.TV>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>);
}

/// A class which mocks [IsTvInWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsTvInWatchlist extends _i1.Mock implements _i12.IsTvInWatchlist {
  MockIsTvInWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
}

/// A class which mocks [GetTvRecomendation].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecomendation extends _i1.Mock
    implements _i13.GetTvRecomendation {
  MockGetTvRecomendation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i14.TvRecomemendation>>> execute(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i5.Future<
                _i2.Either<_i6.Failure, List<_i14.TvRecomemendation>>>.value(
            _FakeEither_0<_i6.Failure, List<_i14.TvRecomemendation>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i14.TvRecomemendation>>>);
}

/// A class which mocks [GetTvTopRated].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvTopRated extends _i1.Mock implements _i15.GetTvTopRated {
  MockGetTvTopRated() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>.value(
            _FakeEither_0<_i6.Failure, List<_i11.TV>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i3.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvDetail,
          [id],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.TvDetail>>.value(
            _FakeEither_0<_i6.Failure, _i7.TvDetail>(
          this,
          Invocation.method(
            #getTvDetail,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i7.TvDetail>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> saveWatchlistTv(
          _i7.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlistTv,
          [tv],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, String>>.value(
            _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlistTv,
            [tv],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, String>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> removeWatchlistTv(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistTv,
          [id],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, String>>.value(
            _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlistTv,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, String>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>> getWatchlistTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTv,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>.value(
            _FakeEither_0<_i6.Failure, List<_i11.TV>>(
          this,
          Invocation.method(
            #getWatchlistTv,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> isTvInWatchlist(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #isTvInWatchlist,
          [id],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #isTvInWatchlist,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>> searchTv(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [query],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>.value(
            _FakeEither_0<_i6.Failure, List<_i11.TV>>(
          this,
          Invocation.method(
            #searchTv,
            [query],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>> getTvListPopular() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvListPopular,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>.value(
            _FakeEither_0<_i6.Failure, List<_i11.TV>>(
          this,
          Invocation.method(
            #getTvListPopular,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>> getTvListTopRated() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvListTopRated,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>.value(
            _FakeEither_0<_i6.Failure, List<_i11.TV>>(
          this,
          Invocation.method(
            #getTvListTopRated,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>> getTvListAiringToday() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvListAiringToday,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>.value(
            _FakeEither_0<_i6.Failure, List<_i11.TV>>(
          this,
          Invocation.method(
            #getTvListAiringToday,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>);

  @override
  _i5.Future<
      _i2.Either<_i6.Failure, List<_i14.TvRecomemendation>>> getTvRecomendation(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecomendation,
          [id],
        ),
        returnValue: _i5.Future<
                _i2.Either<_i6.Failure, List<_i14.TvRecomemendation>>>.value(
            _FakeEither_0<_i6.Failure, List<_i14.TvRecomemendation>>(
          this,
          Invocation.method(
            #getTvRecomendation,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i14.TvRecomemendation>>>);
}

/// A class which mocks [GetTvPopular].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvPopular extends _i1.Mock implements _i16.GetTvPopular {
  MockGetTvPopular() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>.value(
            _FakeEither_0<_i6.Failure, List<_i11.TV>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>);
}

/// A class which mocks [GetTvAiringToday].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvAiringToday extends _i1.Mock implements _i17.GetTvAiringToday {
  MockGetTvAiringToday() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>.value(
            _FakeEither_0<_i6.Failure, List<_i11.TV>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i11.TV>>>);
}
